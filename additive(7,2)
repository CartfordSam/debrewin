from itertools import permutations

perm = permutations([2,3,4,5,6,7,8,9,10,11,12,13,14])
res = []
def permsift(perm):
    for lst in perm:
        mini = []
        for i in range(len(lst)):
            if i < len(lst) -1:
                if abs(lst[i + 1] - lst[i]) > 7:
                    break
                mini.append((lst[i + 1] - lst[i]))
            if i == len(lst) - 1:
                if abs(lst[i] - lst[0]) > 7:
                    break
                mini.append(lst[i] - lst[0])
        if len(mini) == 13:
            res.append(list(lst))
    return res

print(len(permsift(perm)))

a = []
def rotatedperms(lst):
    for i in lst:
        for j in range(len(i)):
            while i[0] != 2:
                i.append(i.pop(j))
    return res

# print(rotatedperms(res))
print(len(rotatedperms(res)))


listodifferences = []

# def initremover(res):
#     for lst in res:
#         differences = []
#         for i in range(len(lst)):
#             if i < len(lst) -1:
#                 if abs(lst[i + 1] - lst[i]) > 5:
#                     break
#                 differences.append((lst[i + 1] - lst[i]))
#             if i == len(lst) - 1:
#                 if abs(lst[i] - lst[0]) > 5:
#                     break
#                 differences.append(lst[i] - lst[0])
#         if len(differences) == 9:
#             listodifferences.append(lst)
#     return listodifferences
#
# print((initremover(res)))
# 112234455
# 2 3 4 5 7 8 9 10 6
sequences = []
def maker(lst):
    for lst in res:
        newlist= [1,1]
        for i in range(1, len(lst) - 1):
            if i < len(lst) -1:
                newlist.append(lst[i] - newlist[-1])
            else:
                 newlist.append(lst[0] - newlist[-1])
            if len(newlist) == 13:
                sequences.append(newlist)
    return sequences

print(len(maker(res)))

b = []
def siftmade(lst):
    for lst in sequences:
        if sum(lst) == 52:
            b.append(lst)
    return b

print(len(siftmade(sequences)))
c =[]
def noneg(b):
    for lst in b:
        for i in range(len(lst)):
            if lst[i] < 1 or lst[i] > 7:
                break
            if i == len(lst) - 1:
                c.append(lst)
    return c

print(len(noneg(b)))

n = []
h = []
def refine(d):
    c = h
    for lst in h:
        for i in range(len(lst)): #could be this and 58
            lst.append(lst.pop(i))
            if lst in n:
                c.remove(lst)
                break
            n.append(lst)
            print(lst)
    return c

# print(refine(c))
print(len(c))

e = []
def reorder(c):
    for lst in c:
        while lst[0] + lst[1] > 2:
            lst.append(lst.pop(0))
        e.append(lst)
    return e
print(len(reorder(c)))
# print("this is length d: " + str(len(c)))

f = []
def doublecheck(e):
    for i in e:
        if i not in f:
            f.append(i)
    return f

print((doublecheck(e)))
print(len(f))
